name: Deploy API

on:
  push:
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.PIPELINE_EXECUTION_ROLE }}
          role-session-name: sam-deploy
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Build and Deploy S3
        working-directory: infrastructure
        run: |
          sam build \
          --template template.s3.yaml \
          --config-env s3

          sam deploy \
          --config-env s3 \
          --template template.s3.yaml \
          --s3-bucket ${{ secrets.ARTIFACTS_BUCKET_NAME }} \
          --no-fail-on-empty-changeset \
          --role-arn ${{ secrets.CLOUDFORMATION_EXECUTION_ROLE }}

      - name: Update AppSync Code Handler by uploading to s3
        run: |
          stackOutputJson=$(aws cloudformation describe-stacks --output json --stack-name appsync-events-s3 --query "Stacks[0].Outputs")
          codeHandlerBucket=$(echo $stackOutputJson | jq -r '.[] | select(.OutputKey=="Bucket") | .OutputValue')
          aws s3 cp ./src/backend/appsync-handlers/event-api.mjs s3://${codeHandlerBucket}/event-api.mjs

          node scripts/verify-escape.mjs
          cat ./infrastructure/template.yaml

      - name: Build and Deploy AppSync Event API
        working-directory: infrastructure
        run: |
          npm install -g esbuild
          npm ci

          sam --info

          sam build \
          --config-env appsync

          sam deploy \
          --config-env appsync \
          --s3-bucket ${{ secrets.ARTIFACTS_BUCKET_NAME }} \
          --no-fail-on-empty-changeset \
          --role-arn ${{ secrets.CLOUDFORMATION_EXECUTION_ROLE }}